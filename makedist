#!/usr/bin/env python
import zeroinstall, sys, os, shutil

os.system('svn status')

trunk_url = 'https://svn.sourceforge.net/svnroot/zero-install/trunk/0launch'
releases_url = 'https://svn.sourceforge.net/svnroot/zero-install/releases/0launch'

for line in os.popen('dpkg-parsechangelog'):
	if line.startswith('Version: '):
		deb_version = line.split(' ', 1)[1].strip()
		break
else:
	raise Exception('Failed to get deb version!')

print "\nDebian version: " + deb_version + " (hint: debchange -i)"

name = 'injector-' + zeroinstall.version
package_name = 'zeroinstall-' + name
a = raw_input("Release " + name + "? [y/N]")
if not a or a not in 'Yy':
	sys.exit(0)

if os.system('cd tests && ./testall.py'):
	print "ERROR: Unit test failure. Stop"
	sys.exit(1)

print "Checking for existing release..."
if os.system('svn ls ' + releases_url + '/' + name + ' >/dev/null') == 0:
	print "WARNING: releases/" + name + " already exists"
	a = raw_input("Overwrite " + name + "? [y/N]")
	if not a or a not in 'Yy':
		sys.exit(0)
	os.system('svn rm ' + releases_url + '/' + name + ' -m overwrite')

if os.system('svn cp -m "Released ' + name + '" ' +
	  trunk_url + ' ' + releases_url + '/' + name):
	print "Failed to make release"
	sys.exit(1)

if os.path.isdir(package_name):
	shutil.rmtree(package_name)
os.system('svn export ' + releases_url + '/' + name + ' ' + package_name)
os.system('svn up')
os.chdir(package_name)
os.system('python setup.py sdist')
os.system('dpkg-buildpackage -rfakeroot')

print "Tarball is", package_name + '/dist/' + package_name + '.tar.gz'
